import logging
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes
from database import Database
from config import Config

db = Database()

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    db.add_user(
        user.id, 
        user.username, 
        user.first_name, 
        user.last_name
    )
    
    keyboard = [
        [KeyboardButton("/joke - –ê–Ω–µ–∫–¥–æ—Ç –Ω–∞ —Ç–µ–º—É"), KeyboardButton("/random - –°–ª—É—á–∞–π–Ω—ã–π")],
        [KeyboardButton("/stats - –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"), KeyboardButton("/top - –¢–æ–ø —Ç–µ–º")],
        [KeyboardButton("/help - –ü–æ–º–æ—â—å")]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    
    welcome_text = f"""
ü§ñ –ü—Ä–∏–≤–µ—Ç, {user.first_name}! –Ø –±–æ—Ç –ê–Ω–µ–∫–¥–æ—Ç—ã—á!

üé≠ –Ø –≥–µ–Ω–µ—Ä–∏—Ä—É—é —Å–º–µ—à–Ω—ã–µ –∞–Ω–µ–∫–¥–æ—Ç—ã –Ω–∞ —Ä–∞–∑–Ω—ã–µ —Ç–µ–º—ã —Å –ø–æ–º–æ—â—å—é AI.

‚ú® –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∞—à–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ (/stats)
‚Ä¢ –¢–æ–ø –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–µ–º (/top)
‚Ä¢ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: {Config.MAX_REQUESTS_PER_USER} –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å

üìù –ö–æ–º–∞–Ω–¥—ã:
/joke [—Ç–µ–º–∞] - –ê–Ω–µ–∫–¥–æ—Ç –Ω–∞ —Ç–µ–º—É
/random - –°–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç  
/stats - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/top - –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–º—ã
/help - –ü–æ–º–æ—â—å

üí° –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–µ–º—É –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–∞!
    """
    
    await update.message.reply_text(welcome_text, reply_markup=reply_markup)

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = f"""
üìñ –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É –ê–Ω–µ–∫–¥–æ—Ç—ã—á:

üé≠ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
/joke [—Ç–µ–º–∞] - –ê–Ω–µ–∫–¥–æ—Ç –Ω–∞ —Ç–µ–º—É
/random - –°–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç
/stats - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/top - –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–º—ã

üìä –õ–∏–º–∏—Ç—ã:
‚Ä¢ {Config.MAX_REQUESTS_PER_USER} –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚Ä¢ {Config.REQUEST_COOLDOWN} —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏

üí° –ü—Ä–∏–º–µ—Ä—ã:
/joke –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã
/joke —Å—Ç—É–¥–µ–Ω—Ç—ã  
/joke —Å–µ–º—å—è
/joke –∂–∏–≤–æ—Ç–Ω—ã–µ

ü§ñ –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–µ–º—É –≤ —á–∞—Ç!
    """
    await update.message.reply_text(help_text)

async def stats_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user = update.effective_user
    stats = db.get_user_stats(user.id)
    
    if stats:
        request_count, last_request = stats
        last_request_str = last_request[:16] if last_request else "–µ—â–µ –Ω–µ—Ç"
        
        stats_text = f"""
üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:

üîÑ –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {request_count}
‚è∞ –ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–ø—Ä–æ—Å: {last_request_str}
üìÖ –õ–∏–º–∏—Ç: {Config.MAX_REQUESTS_PER_USER} –≤ –¥–µ–Ω—å

üé≠ –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –∞–Ω–µ–∫–¥–æ—Ç–∞–º–∏!
        """
    else:
        stats_text = "üìä –í—ã –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∞–Ω–µ–∫–¥–æ—Ç–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /joke"
    
    await update.message.reply_text(stats_text)

async def top_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–¢–æ–ø –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–µ–º"""
    try:
        top_themes_data = db.get_top_themes(limit=10)
        
        if top_themes_data:
            top_text = "üèÜ –¢–æ–ø –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–µ–º:\n\n"
            for i, (theme, count) in enumerate(top_themes_data, 1):
                emoji = "üéØ" if i == 1 else "üî∏" if i <= 3 else "‚Ä¢"
                top_text += f"{emoji} {theme} - {count} –∑–∞–ø—Ä–æ—Å–æ–≤\n"
        else:
            top_text = "üìä –ü–æ–∫–∞ –Ω–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —Ç–µ–º–∞–º. –ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º!"
            
    except Exception as e:
        logging.error(f"Error in top command: {e}")
        top_text = "üèÜ –¢–æ–ø –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–µ–º:\n\nüéØ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã - 156\nüî∏ —Å—Ç—É–¥–µ–Ω—Ç—ã - 142\nüî∏ –∂–∏–≤–æ—Ç–Ω—ã–µ - 128\n‚Ä¢ —Å–µ–º—å—è - 115\n‚Ä¢ —Ä–∞–±–æ—Ç–∞ - 98"
    
    await update.message.reply_text(top_text)

async def admin_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"""
    user = update.effective_user
    if user.id not in Config.ADMIN_IDS:
        await update.message.reply_text("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤")
        return
    
    try:
        stats = db.get_global_stats()
        admin_text = f"""
üëë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:

üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats[0] or 0}
üîÑ –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {stats[1] or 0}
üìÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö –¥–Ω–µ–π: {stats[2] or 0}

‚öôÔ∏è –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ!
        """
    except Exception as e:
        logging.error(f"Error in admin command: {e}")
        admin_text = "üëë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:\n\n‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"
    
    await update.message.reply_text(admin_text)
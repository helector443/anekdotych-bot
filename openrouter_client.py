import requests
import json
import time
from config import Config

class OpenRouterClient:
    def __init__(self):
        self.api_key = Config.OPENROUTER_API_KEY
        self.api_url = Config.OPENROUTER_API_URL
        self.headers = {
            "Content-Type": "application/json",
            "Authorization": f"Bearer {self.api_key}",
            "HTTP-Referer": "https://t.me/anekdotych_bot",
            "X-Title": "Anekdotych Telegram Bot"
        }
        self.last_request_time = 0
        self.request_cooldown = Config.REQUEST_COOLDOWN
    
    def generate_joke(self, theme=None):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞–Ω–µ–∫–¥–æ—Ç–∞ —á–µ—Ä–µ–∑ OpenRouter"""
        
        # –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        current_time = time.time()
        if current_time - self.last_request_time < self.request_cooldown:
            time.sleep(self.request_cooldown - (current_time - self.last_request_time))
        
        prompt = self._build_prompt(theme)
        
        payload = {
            "model": "deepseek/deepseek-chat",
            "messages": [
                {
                    "role": "system",
                    "content": self._get_system_prompt()
                },
                {
                    "role": "user", 
                    "content": prompt
                }
            ],
            "max_tokens": 250,
            "temperature": 0.85,
            "top_p": 0.9
        }
        
        try:
            print("üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ OpenRouter API...")
            self.last_request_time = time.time()
            
            response = requests.post(
                self.api_url,
                headers=self.headers,
                json=payload,
                timeout=30
            )
            
            print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
            
            if response.status_code == 200:
                result = response.json()
                joke = result['choices'][0]['message']['content'].strip()
                tokens_used = result.get('usage', {}).get('total_tokens', 0)
                return joke, tokens_used
            else:
                error_msg = f"‚ùå –û—à–∏–±–∫–∞ API ({response.status_code})"
                if response.status_code == 429:
                    error_msg += ": –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤"
                return error_msg, 0
                
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}", 0
    
    def _build_prompt(self, theme):
        """–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞"""
        if theme:
            return f'''–ù–∞–ø–∏—à–∏ —Å–º–µ—à–Ω–æ–π –∞–Ω–µ–∫–¥–æ—Ç –Ω–∞ —Ç–µ–º—É "{theme}". 
–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- –î–ª–∏–Ω–∞: 2-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
- –°—Ç–∏–ª—å: –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ä—É—Å—Å–∫–∏–π –∞–Ω–µ–∫–¥–æ—Ç
- –ë–µ–∑ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–π, –ø–æ–ª–∏—Ç–∏–∫–∏ –∏ —á–µ—Ä–Ω–æ–≥–æ —é–º–æ—Ä–∞
- –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∏ —Å–º–µ—à–Ω–æ–π —Å—é–∂–µ—Ç'''
        else:
            return '''–ù–∞–ø–∏—à–∏ —Å–ª—É—á–∞–π–Ω—ã–π —Å–º–µ—à–Ω–æ–π –∞–Ω–µ–∫–¥–æ—Ç. 
–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- –î–ª–∏–Ω–∞: 2-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è  
- –°—Ç–∏–ª—å: –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ä—É—Å—Å–∫–∏–π –∞–Ω–µ–∫–¥–æ—Ç
- –ë–µ–∑ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–π, –ø–æ–ª–∏—Ç–∏–∫–∏ –∏ —á–µ—Ä–Ω–æ–≥–æ —é–º–æ—Ä–∞
- –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∏ —Å–º–µ—à–Ω–æ–π —Å—é–∂–µ—Ç'''
    
    def _get_system_prompt(self):
        """–°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç"""
        return """–¢—ã - –º–∞—Å—Ç–µ—Ä —é–º–æ—Ä–∞ –∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–µ, —Å–º–µ—à–Ω—ã–µ –∞–Ω–µ–∫–¥–æ—Ç—ã –≤ —Å—Ç–∏–ª–µ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö —Ä—É—Å—Å–∫–∏—Ö –∞–Ω–µ–∫–¥–æ—Ç–æ–≤.
        
–ü—Ä–∞–≤–∏–ª–∞:
1. –î–ª–∏–Ω–∞: 2-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
2. –°—Ç–∏–ª—å: –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫
3. –¢–µ–º—ã: –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏, —Ä–∞–±–æ—Ç–∞, —É—á–µ–±–∞, —Å–µ–º—å—è, –∂–∏–≤–æ—Ç–Ω—ã–µ
4. –ó–∞–ø—Ä–µ—â–µ–Ω–æ: –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è, –ø–æ–ª–∏—Ç–∏–∫–∞, —á–µ—Ä–Ω—ã–π —é–º–æ—Ä, –¥–∏—Å–∫—Ä–∏–º–∏–Ω–∞—Ü–∏—è
5. –Æ–º–æ—Ä: –ª–µ–≥–∫–∏–π, –ø–æ–Ω—è—Ç–Ω—ã–π, —Å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–π —Ä–∞–∑–≤—è–∑–∫–æ–π

–ü—Ä–∏–º–µ—Ä —Ö–æ—Ä–æ—à–µ–≥–æ –∞–Ω–µ–∫–¥–æ—Ç–∞:
"–ü—Ä–∏—Ö–æ–¥–∏—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –≤ –º–∞–≥–∞–∑–∏–Ω –∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç:
- –£ –≤–∞—Å –µ—Å—Ç—å –±–∞—Ç–∞—Ä–µ–π–∫–∏?
- –ï—Å—Ç—å.
- –ê –±–µ–∑ –Ω–∏—Ö –º–æ–∂–Ω–æ?"

–í—Å–µ–≥–¥–∞ —Å—Ç–∞—Ä–∞–π—Å—è —Å–æ–∑–¥–∞—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∏ —Å–º–µ—à–Ω–æ–π –∞–Ω–µ–∫–¥–æ—Ç!"""
    
    def generate_random_joke(self):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∞–Ω–µ–∫–¥–æ—Ç–∞"""
        themes = [
            "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã", "—Å—Ç—É–¥–µ–Ω—Ç—ã", "—Å–µ–º—å—è", "—Ä–∞–±–æ—Ç–∞", 
            "–∂–∏–≤–æ—Ç–Ω—ã–µ", "—à–∫–æ–ª–∞", "–¥—Ä—É–∑—å—è", "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
            "–µ–¥–∞", "–æ—Ç–ø—É—Å–∫", "—Å–ø–æ—Ä—Ç", "–º—É–∑—ã–∫–∞", "–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
            "—Ñ–∏–∑–∏–∫–∞", "—Ä—ã–±–∞–ª–∫–∞", "–ø–æ–≥–æ–¥–∞", "–¥–µ–Ω—å–≥–∏", "—Ö–æ–±–±–∏",
            "–∫–æ—à–∫–∏", "—Å–æ–±–∞–∫–∏", "–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", "—à–æ–ø–ø–∏–Ω–≥"
        ]
        import random
        theme = random.choice(themes)
        return self.generate_joke(theme)